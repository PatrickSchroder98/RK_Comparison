class FehlbergRungeKutta:
    """This class contains Fehlberg-Runge-Kutta methods of orders from 5 to 7. Work in progress to add 8th order"""

    def fehlbergrungekutta5(self, f, x, y1, n, h):
        """Fehlberg-Runge-Kutta order 5, source: [5] in in bibliography"""
        for i in range(n):
            k1 = h * f(x[i], y1[i])
            k2 = h * f(x[i] + (1.0 / 6.0) * h, y1[i] + (1.0 / 6.0) * k1)
            k3 = h * f(
                x[i] + (4.0 / 15.0) * h, y1[i] + (4.0 / 75.0) * k1 + (16.0 / 75.0) * k2
            )
            k4 = h * f(
                x[i] + (2.0 / 3.0) * h,
                y1[i] + (5.0 / 6.0) * k1 - (8.0 / 3.0) * k2 + (5.0 / 2.0) * k3,
            )
            k5 = h * f(
                x[i] + (4.0 / 5.0) * h,
                y1[i]
                - (8.0 / 5.0) * k1
                + (144.0 / 25.0) * k2
                - 4.0 * k3
                + (16.0 / 25.0) * k4,
            )
            k6 = h * f(
                x[i] + h,
                y1[i]
                + (361.0 / 320.0) * k1
                - (18.0 / 57.0) * k2
                + (407.0 / 128.0) * k3
                - (11.0 / 80.0) * k4
                + (55.0 / 128.0) * k5,
            )
            # --------------------------------------------------------
            k7 = h * f(
                x[i],
                y1[i]
                - (11.0 / 640.0) * k1
                + (11.0 / 256.0) * k3
                - (11.0 / 160.0) * k4
                + (11.0 / 256.0) * k5,
            )
            k8 = h * f(
                x[i] + h,
                y1[i]
                + (93.0 / 640.0) * k1
                - (18.0 / 5.0) * k2
                + (803.0 / 256.0) * k3
                - (11.0 / 160.0) * k4
                + (99.0 / 256.0) * k5
                + k7,
            )

            x.append(x[i] + h)
            # y1.append(y1[i] + ((31.0 / 384.0) * k1 + (1125.0 / 2816.0) * k3 + (9.0 / 32.0) * k4 + (125.0 / 768.0) * k5
            #                   + (5.0 / 66.0) * k6))
            y1.append(
                y1[i]
                + (
                    (7.0 / 1408.0) * k1
                    + (1125.0 / 2816.0) * k3
                    + (9.0 / 32.0) * k4
                    + (125.0 / 768.0) * k5
                    + (5.0 / 66.0) * k7
                    + (5.0 / 66.0) * k8
                )
            )

    def fehlbergrungekutta6(self, f, x, y1, n, h):
        """Fehlberg-Runge-Kutta order 6, source: [5] in in bibliography"""
        for i in range(n):
            k1 = h * f(x[i], y1[i])
            k2 = h * f(x[i] + (2.0 / 33.0) * h, y1[i] + (2.0 / 33.0) * k1)
            k3 = h * f(x[i] + (4.0 / 33.0) * h, y1[i] + (4.0 / 33.0) * k2)
            k4 = h * f(
                x[i] + (2.0 / 11.0) * h, y1[i] + (1.0 / 22.0) * k1 + (3.0 / 22.0) * k3
            )
            k5 = h * f(
                x[i] + (1.0 / 2.0) * h,
                y1[i] + (43.0 / 64.0) * k1 - (165.0 / 64.0) * k3 + (77.0 / 32.0) * k4,
            )
            k6 = h * f(
                x[i] + (2.0 / 3.0) * h,
                y1[i]
                - (2383.0 / 486.0) * k1
                + (1067.0 / 54.0) * k3
                - (26312.0 / 1701.0) * k4
                + (2176.0 / 1701.0) * k5,
            )
            k7 = h * f(
                x[i] + (6.0 / 7.0) * h,
                y1[i]
                + (10077.0 / 4802.0) * k1
                - (5643.0 / 686.0) * k3
                + (116259.0 / 16807.0) * k4
                - (6240.0 / 16807.0) * k5
                + (1053.0 / 2401.0) * k6,
            )
            k8 = h * f(
                x[i] + h,
                y1[i]
                - (733.0 / 176.0) * k1
                + (141.0 / 8.0) * k3
                - (335763.0 / 23296.0) * k4
                + (216.0 / 77.0) * k5
                - (4617.0 / 2816.0) * k6
                + (7203.0 / 9152.0) * k7,
            )
            # ------------------------------------------------
            k9 = h * f(
                x[i],
                y1[i]
                + (15.0 / 352.0) * k1
                - (5445.0 / 46592.0) * k4
                + (18.0 / 77.0) * k5
                - (1215.0 / 5632.0) * k6
                + (1029.0 / 18304.0) * k7,
            )
            k10 = h * f(
                x[i] + h,
                y1[i]
                - (1833.0 / 352.0) * k1
                + (141.0 / 8.0) * k3
                - (51237.0 / 3584.0) * k4
                + (18.0 / 7.0) * k5
                - (729.0 / 512.0) * k6
                + (1029.0 / 1408.0) * k7
                + k9,
            )

            x.append(x[i] + h)
            # y1.append(y1[i] + ((77.0 / 1440.0) * k1 + (1771561.0 / 6289920.0) * k4 + (32.0 / 105.0) * k5
            #                    + (243.0 / 2560.0) * k6 + (16807.0 / 74880.0) * k7 + (11.0 / 270.0) * k8))
            y1.append(
                y1[i]
                + (
                    (11.0 / 864.0) * k1
                    + (1771561.0 / 6289920.0) * k4
                    + (32.0 / 105.0) * k5
                    + (243.0 / 2560.0) * k6
                    + (16807.0 / 74880.0) * k7
                    + (11.0 / 270.0) * k9
                    + (11.0 / 270.0) * k10
                )
            )

    def fehlbergrungekutta7(self, f, x, y1, n, h):
        """Fehlberg-Runge-Kutta order 7, source: [5] in in bibliography"""
        for i in range(n):
            k1 = h * f(x[i], y1[i])
            k2 = h * f(x[i] + (2.0 / 27.0) * h, y1[i] + (2.0 / 27.0) * k1)
            k3 = h * f(
                x[i] + (1.0 / 9.0) * h, y1[i] + (1.0 / 36.0) * k1 + (1.0 / 12.0) * k2
            )
            k4 = h * f(
                x[i] + (1.0 / 6.0) * h, y1[i] + (1.0 / 24.0) * k1 + (1.0 / 8.0) * k3
            )
            k5 = h * f(
                x[i] + (5.0 / 12.0) * h,
                y1[i] + (5.0 / 12.0) * k1 - (25.0 / 16.0) * k3 + (25.0 / 16.0) * k4,
            )
            k6 = h * f(
                x[i] + (1.0 / 2.0) * h,
                y1[i] + (1.0 / 20.0) * k1 + (1.0 / 4.0) * k4 + (1.0 / 5.0) * k5,
            )
            k7 = h * f(
                x[i] + (5.0 / 6.0) * h,
                y1[i]
                - (25.0 / 108.0) * k1
                + (125.0 / 108.0) * k4
                - (65.0 / 27.0) * k5
                + (125.0 / 54.0) * k6,
            )
            k8 = h * f(
                x[i] + (1.0 / 6.0) * h,
                y1[i]
                + (31.0 / 300.0) * k1
                + (61.0 / 225.0) * k5
                - (2.0 / 9.0) * k6
                + (13.0 / 900.0) * k7,
            )
            k9 = h * f(
                x[i] + (2.0 / 3.0) * h,
                y1[i]
                + 2.0 * k1
                - (53.0 / 6.0) * k4
                + (704.0 / 45.0) * k5
                - (107.0 / 9.0) * k6
                + (67.0 / 90.0) * k7
                + 3.0 * k8,
            )
            k10 = h * f(
                x[i] + (1.0 / 3.0) * h,
                y1[i]
                - (91.0 / 108.0) * k1
                + (23.0 / 108.0) * k4
                - (976.0 / 135.0) * k5
                + (311.0 / 54.0) * k6
                - (19.0 / 60.0) * k7
                + (17.0 / 6.0) * k8
                - (1.0 / 12.0) * k9,
            )
            k11 = h * f(
                x[i] + h,
                y1[i]
                + (2383.0 / 4100.0) * k1
                - (341.0 / 164.0) * k4
                + (4496.0 / 1025.0) * k5
                - (301.0 / 82.0) * k6
                + (2133.0 / 4100.0) * k7
                + (45.0 / 82.0) * k8
                + (45.0 / 164.0) * k9
                + (18.0 / 41.0) * k10,
            )
            # ------------------------------------------------
            k12 = h * f(
                x[i],
                y1[i]
                + (3.0 / 205.0) * k1
                - (6.0 / 41.0) * k6
                - (3.0 / 205.0) * k7
                - (3.0 / 41.0) * k8
                + (3.0 / 41.0) * k9
                + (6.0 / 41.0) * k10,
            )
            k13 = h * f(
                x[i] + h,
                y1[i]
                - (1777.0 / 4100.0) * k1
                - (341.0 / 164.0) * k4
                + (4496.0 / 1025.0) * k5
                - (289.0 / 82.0) * k6
                + (2193.0 / 4100.0) * k7
                + (51.0 / 82.0) * k8
                + (33.0 / 164.0) * k9
                + (12.0 / 41.0) * k10
                + k12,
            )

            x.append(x[i] + h)
            # y1.append(y1[i] + ((41.0 / 840.0) * k1 + (34.0 / 105.0) * k6 + (9.0 / 35.0) * k7 + (9.0 / 35.0) * k8
            #                    + (9.0 / 280.0) * k9 + (9.0 / 280.0) * k10 + (41.0 / 840.0) * k11))
            y1.append(
                y1[i]
                + (
                    (34.0 / 105.0) * k6
                    + (9.0 / 35.0) * k7
                    + (9.0 / 35.0) * k8
                    + (9.0 / 280.0) * k9
                    + (9.0 / 280.0) * k10
                    + (41.0 / 840.0) * k12
                    + (41.0 / 840.0) * k13
                )
            )
